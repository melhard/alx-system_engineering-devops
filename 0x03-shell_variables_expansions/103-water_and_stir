#!/bin/bash

water_digits="water"
stir_digits="stir"
bestchol_digits="bestchol"

digit_to_value() {
  local digit="$1"
  local base_digits="$2"
  local pos=$(expr index "$base_digits" "$digit")
  if [ "$pos" -eq 0 ]; then
    echo "Error: digit '$digit' not found in base digits '$base_digits'" >&2
    exit 1
  fi
  echo $((pos - 1))
}

to_decimal() {
  local number="$1"
  local base_digits="$2"
  local base_len=${#base_digits}
  local decimal=0

  for (( i=0; i<${#number}; i++ )); do
    digit="${number:$i:1}"
    digit_val=$(digit_to_value "$digit" "$base_digits")
    decimal=$((decimal * base_len + digit_val))
  done

  echo "$decimal"
}

from_decimal() {
  local decimal="$1"
  local base_digits="$2"
  local base_len=${#base_digits}
  local result=""

  if [ "$decimal" -eq 0 ]; then
    echo "${base_digits:0:1}"
    return
  fi

  while [ "$decimal" -gt 0 ]; do
    remainder=$((decimal % base_len))
    decimal=$((decimal / base_len))
    # Prepend digit
    result="${base_digits:$remainder:1}$result"
  done

  echo "$result"
}

# Remove '.' from STIR as invalid digit
stir_num="${STIR//./}"
water_num="$WATER"

if [ -z "$water_num" ] || [ -z "$stir_num" ]; then
  echo "Error: WATER and STIR environment variables must be set" >&2
  exit 1
fi

water_dec=$(to_decimal "$water_num" "$water_digits")
stir_dec=$(to_decimal "$stir_num" "$stir_digits")

sum=$((water_dec + stir_dec))

result=$(from_decimal "$sum" "$bestchol_digits")

echo "$result"

